{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setSelectedTodo","selectedTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","setFilter","setQuery","query","onChange","event","target","value","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","ok","Error","status","statusText","json","Loader","TodoModal","useState","isLoading","setIsLoading","isError","setIsError","user","setUser","useEffect","userId","catch","finally","href","email","name","App","setTodos","filter","visibleTodos","sortType","filtered","toLowerCase","includes","getVisibleTodos","ReactDOM","render","document","getElementById"],"mappings":"oPAUaA,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,MACAC,EAFuC,EAEvCA,gBACAC,EAHuC,EAGvCA,aAHuC,OAKvC,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAACC,GACV,OACE,qBACE,UAAQ,OACRF,UAAU,GAFZ,UAKE,oBAAIA,UAAU,eAAd,SACGE,EAAKC,KAGR,oBAAIH,UAAU,eAAd,SACGE,EAAKE,WACJ,sBAAMJ,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAKnB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWK,IAAWH,EAAKE,UAC5B,mBAEA,mBAHF,SAMGF,EAAKI,UAIV,oBAAIN,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,kBAAMV,EAAgBI,IAJjC,SAME,sBAAMF,UAAU,OAAhB,UACe,OAAZD,QAAY,IAAZA,OAAA,EAAAA,EAAcI,MAAOD,EAAKC,GACzB,mBAAGH,UAAU,eAEb,mBAAGA,UAAU,6BApChBE,EAAKC,aC3BTM,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,MAAxB,OACzC,uBAAMZ,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRa,SAAU,SAACC,GAAD,OAAWJ,EAAUI,EAAMC,OAAOC,QAF9C,UAKE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGhB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACViB,YAAY,YACZD,MAAOJ,EACPC,SAAU,SAACC,GAAD,OAAWH,EAAQ,OAACG,QAAD,IAACA,OAAD,EAACA,EAAOC,OAAOC,UAE9C,sBAAMhB,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdY,GACC,sBAAMZ,UAAU,gBAAgBkB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRZ,KAAK,SACLP,UAAU,SACVQ,QAAS,kBAAMG,EAAS,gBChCpC,SAASS,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GACJ,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAJ,UAAaF,EAAIG,OAAjB,cAA6BH,EAAII,aAGzC,OAAOJ,EAAIK,U,MAIV,ICxBMC,EAAmB,kBAC9B,qBAAKnC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,uBCMNoC,EAA6B,SAAC,GAGpC,IAFLrC,EAEI,EAFJA,aACAD,EACI,EADJA,gBAEA,EAAkCuC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwBJ,qBAAxB,mBAAOK,EAAP,KAAaC,EAAb,KASA,OAPAC,qBAAU,WFUW,IAACC,KETZ9C,EAAa8C,OFSkBzB,EAAG,iBAAiByB,KERxDlB,KAAKgB,GACLG,OAAM,kBAAML,GAAW,MACvBM,SAAQ,kBAAMR,GAAa,QAC7B,CAACxC,IAGF,sBAAKC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEdsC,EACC,cAAC,EAAD,IAEA,qBAAKtC,UAAU,aAAf,SAEGwC,EACC,mBAAGxC,UAAU,kDAAb,2CAIA,qCACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYD,EAAaI,MAIzB,wBACEI,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAAS,kBAAMV,EAAgB,YAInC,sBAAKE,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGD,EAAaO,QAGhB,oBAAGN,UAAU,QAAQ,UAAQ,aAA7B,UAEGD,EAAaK,UACZ,wBAAQJ,UAAU,mBAAlB,kBAEA,wBAAQA,UAAU,kBAAlB,qBAGD,OAED,mBAAGgD,KAAI,wBAAYN,QAAZ,IAAYA,OAAZ,EAAYA,EAAMO,OAAzB,gBACGP,QADH,IACGA,OADH,EACGA,EAAMQ,sBC1CdC,EAAgB,WAC3B,MAA0Bd,mBAAiB,IAA3C,mBAAOxC,EAAP,KAAcuD,EAAd,KACA,EAA0Bf,mBAAS,IAAnC,mBAAOzB,EAAP,KAAcD,EAAd,KACA,EAA4B0B,mBAAS,OAArC,mBAAOgB,EAAP,KAAe3C,EAAf,KACA,EAAkC2B,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAwCJ,mBAAsB,MAA9D,mBAAOtC,EAAP,KAAqBD,EAArB,KAEA8C,qBAAU,WHbkBxB,EAAY,UGenCO,KAAKyB,GACLN,OAAM,kBAAML,GAAW,MACvBM,SAAQ,kBAAMR,GAAa,QAC7B,IAEH,IAAMe,EAnCgB,SACtBzD,EACA0D,EACA3C,GAEA,IAAI4C,EAAW3D,EAUf,MARiB,WAAb0D,IACFC,EAAW3D,EAAMwD,QAAO,SAAAnD,GAAI,OAAKA,EAAKE,cAGvB,cAAbmD,IACFC,EAAW3D,EAAMwD,QAAO,SAAAnD,GAAI,OAAIA,EAAKE,cAGhCoD,EAASH,QAAO,SAAAnD,GAAI,OACzBA,EAAKI,MAAMmD,cAAcC,SAAS9C,EAAM6C,kBAmBrBE,CAAgB9D,EAAOwD,EAAQzC,GAEpD,OACE,qCACE,qBAAKZ,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEU,UAAWA,EACXC,SAAUA,EACVC,MAAOA,MAIX,sBAAKZ,UAAU,QAAf,UACGwC,GACC,mBAAGxC,UAAU,kDAAb,kCAKDsC,EACC,cAAC,EAAD,KACGE,GACH,cAAC,EAAD,CACE3C,MAAOyD,EACPxD,gBAAiBA,EACjBC,aAAcA,cAOR,OAAjBA,GACC,cAAC,EAAD,CACEA,aAAcA,EACdD,gBAAiBA,QCpF3B8D,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1cf74cd0.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setSelectedTodo: (todo: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => {\n        return (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(todo.completed ? (\n                'has-text-success'\n              ) : (\n                'has-text-danger'\n              ))}\n              >\n                {todo.title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  {selectedTodo?.id !== todo.id ? (\n                    <i className=\"far fa-eye\" />\n                  ) : (\n                    <i className=\"far fa-eye-slash\" />\n                  )}\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  setFilter: (filter: string) => void\n  setQuery: (query: string) => void,\n  query: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({ setFilter, setQuery, query }) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => setFilter(event.target.value)}\n        >\n\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={(event) => setQuery(event?.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status} - ${res.statusText}`);\n      }\n\n      return res.json();\n    });\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo,\n  setSelectedTodo: (todo: Todo | null) => void\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(setUser)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, [selectedTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n\n          {isError ? (\n            <p className=\"box has-background-danger-light has-text-danger\">\n              Oops... Something went wrong!\n            </p>\n          ) : (\n            <>\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${selectedTodo.id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={() => setSelectedTodo(null)}\n                />\n              </header>\n\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {selectedTodo.title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n\n                  {selectedTodo.completed ? (\n                    <strong className=\"has-text-success\">Done</strong>\n                  ) : (\n                    <strong className=\"has-text-danger\">Planned</strong>\n                  )}\n\n                  {' by '}\n\n                  <a href={`mailto:${user?.email}`}>\n                    {user?.name}\n                  </a>\n                </p>\n              </div>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nconst getVisibleTodos = (\n  todos: Todo[],\n  sortType: string,\n  query: string,\n): Todo[] => {\n  let filtered = todos;\n\n  if (sortType === 'active') {\n    filtered = todos.filter(todo => !todo.completed);\n  }\n\n  if (sortType === 'completed') {\n    filtered = todos.filter(todo => todo.completed);\n  }\n\n  return filtered.filter(todo => (\n    todo.title.toLowerCase().includes(query.toLowerCase())\n  ));\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('all');\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const visibleTodos = getVisibleTodos(todos, filter, query);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilter={setFilter}\n                setQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isError && (\n                <p className=\"box has-background-danger-light has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {isLoading ? (\n                <Loader />\n              ) : !isError && (\n                <TodoList\n                  todos={visibleTodos}\n                  setSelectedTodo={setSelectedTodo}\n                  selectedTodo={selectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo !== null && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}